* SHOTOKS.S1 -- Show tokens for current line, CRB, Nov 18, 2014
* 12/01/2014 CRB Moved from scan module
* 12/14/2014 CRB Add unpacked user name
* 12/22/2014 CRB Adding comments
* 12/27/2014 CRB Hacking
* 02/17/2015 CRB Fix seg fault from integer tokens

  BEGIN SHOTOKS;
  ENT SHOTOKS;

  EXT TOKENS;
  EXT PROC WRITE,IFORM;
  EXT PROC CAT2,CAT3;
  EXT PROC B402A,GETWRD;
  EXT BUFF;                       * use BUFF in initsym
  EXT MASKV;

  SET MAXTOK=127;                 * maximum number of tokens in a line
  DCL OUTCH=3;
  DCL LKIND;                      * lexical KIND code
  DCL TOKNUM;                     * current token index
  DCL TOKEN;
  DCL SUBSTR,OP;
  DCL DEBUG(MAXTOK),TMP(31);
  MSG SPACES='                   ';
  DCL B40;
  SET PRIM18=61;

PROC SHOTOKS;                     * show tokens for current line
  TOKNUM=1;
  DO WHILE TOKNUM LE 4*TOKENS;
    TOKEN=TOKENS(TOKNUM);
    LKIND=(TOKEN SHR 28) AND 15;
    DEBUG(1)=LKIND+'0';
    DEBUG(2)=' ';
    DEBUG(3)=' ';
    DEBUG=3;
    SUBSTR=TOKEN AND MASKV;
    CALL CAT3(DEBUG,SUBSTR,BUFF);
    CALL CAT2(DEBUG,SPACES);
    DEBUG=14;

    TMP=10;                       * set size of TMP
    CASE LKIND-1; OF SL1,SL2,SL3,SL4;
LABEL SL1; GO TO SL4;             * symbol
LABEL SL2;                        * integer
      TOKEN=TOKENS(TOKNUM+1);     * get integer's value
LABEL SL3;                        * quote string
      TOKEN=BUFF(TOKEN AND 255);  * extract first char
LABEL SL4;                        * single character token
      TOKEN=TOKENS(TOKNUM+1);     * INDEX of user symbol
    ENDCASE 

    CALL IFORM(TOKEN,TMP);        * VAL, OP or INDEX
    CALL CAT2(DEBUG,TMP);
    DEBUG=DEBUG+1;                * add one more space
    DEBUG(DEBUG)=' ';             * for a blank separator
    IF LKIND EQ 1; THEN 
        CALL GETWRD(TOKEN,B40);   * get base 40 name code
        TMP=0;
        CALL B402A(B40,TMP);      * convert B40 code to ASCII
      ELSE IF LKIND EQ 4; THEN 
        CALL GETWRD(TOKEN,B40);   * get hash base code special char
        TMP=1;
        TMP(1)=B40/PRIM18;        * convert special char to ASCII
      ELSE GO TO SL5;
      ENDIF ENDIF  
    CALL CAT2(DEBUG,TMP);
LABEL SL5;
    CALL WRITE(OUTCH,DEBUG);
    TOKNUM=TOKNUM+4;
  ENDDO
  RETURN
ENDPROC

END
