1       * SCAN.S1 -- Frontend scan for Small, CRB, Feb 19, 2014                 
2       * 04/06/2014 CRB Rewite for new LEX and TOKENS array                    
3       * 06/22/2014 CRB Use BUFF in initsym                                    
4       * 07/24/2014 CRB Tinkering                                              
5       * 11/25/2014 CRB Separate out shotoks                                   
6       * 12/22/2014 CRB Initialize TOKENS to zero inside loop                  
7       * 12/31/2014 CRB Handle LKIND=0 at end-of-line                          
8       * 01/06/2015 CRB Change TOKNUM to TINDEX, more comments                 
9       * 02/02/2015 CRB Change way TOKENS are counted                          
10      * 08/04/2015 CRB Add LISTNG for source listing output                   
11      * 09/04/2015 CRB Cleanup for listing output                             
12      * 09/11/2015 CRB Adding TSTFLG to control SHOTOKS                       
13                                                                              
14        BEGIN SCAN;                                                           
15        ENTRY SCAN;                                                           
16        ENTRY TOKENS;                   * make TOKENS global for parsing      
17                                                                              
18        EXT PROC SHOTOKS;               * used only for testing               
19        EXT PROC READ,WRITE,IFORM;                                            
20        EXT PROC LEX;                                                         
21        EXT PROC CAT2,CAT3;                                                   
22        EXT BUFF;                       * use BUFF in initsym                 
23        EXT MASKV;                                                            
24        EXT TSTFLG;                                                           
25        ENT OUTCH;                                                            
26                                                                              
27        SET MAXTOK=127;                 * maximum number of tokens in a line  
28        DCL INCH=1,OUTCH=3,STATUS;                                            
29        DCL EOF=0;                                                            
30        DCL LEXEME(4);                  * attributes for a lexical token      
31        DCL LKIND;                      * lexical KIND code                   
32        DCL ICHAR,MODE;                                                       
33        DCL STAR=('*');                 * asterisk                            
34        DCL SEMICO=(';');               * semicolon                           
35        DCL FIRSTC;                     * first character of current token    
36        DCL TOKENS(MAXTOK*4);           * array of tokens in current line     
37        DCL TINDEX;                     * current token index                 
38        MSG COMMNT='* ';                * prefix for comment in mill output   
39                                                                              
40      PROC SCAN;                        * frontend scanner for Small          
41   1    DO WHILE 1;                                                           
42   2      TOKENS=0;                     * reinitialize to zero for each loop  
43   2      MODE=1;                       * MODE 1 allows comments              
44   2      STATUS=READ(INCH,BUFF);                                             
45   2      IF STATUS EQ EOF;             * end of source input file            
46   3        THEN RETURN;                                                      
47   3        ENDIF                                                             
48   2      LINCNT=LINCNT+1;              * bump line count                     
49   2      LISTLN=0;                     * initialize listing line buffer      
50   2      CALL CAT2(LISTLN,COMMNT);     * insert coment prefix                
51   2      CALL CAT2(LISTLN,BUFF);       * append source line                  
52   2      CALL WRITE(OUTCH,LISTLN);     * output to mill as comment           
53   2  *    LEVEL=1;                      * test level                         
54   2      CALL LISTNG;                  * source listing output               
55   2      ICHAR=1;                                                            
56   2      TINDEX=1;                                                           
57   2      DO WHILE ICHAR LE BUFF;       * until end of line                   
58   3        LKIND=LEX(ICHAR,LEXEME);    * call LEX, get LKIND and LEXEME      
59   3  LABEL LEX1;                       * debugging hack                      
60   3        IF LKIND EQ 0;              * end of line if null token           
61   4          THEN GO TO CONTIN; ENDIF                                        
62   3        FIRSTC=BUFF(LEXEME AND 255); * extract anchor for 1st char of toke
63   3        IF MODE; THEN                                                     
64   4          IF FIRSTC EQ STAR;        * if MODE 1 and * skip to next        
65   5            THEN GO TO CONTIN;      * if comment ignore rest of line      
66   5            ELSE MODE=0;            * comments not allowed in MODE 0      
67   5          ENDIF ENDIF                                                     
68   3        IF MODE EQ 0; THEN                                                
69   4          IF FIRSTC EQ SEMICO;      * revert to mode 1 on semicolon       
70   5             THEN MODE=1;                                                 
71   5          ENDIF ENDIF                                                     
72   3                                                                          
73   3        TOKENS(TINDEX)=LEXEME;      * save current token                  
74   3        CASE LKIND-1; OF LK1,LK2,LK3,LK4;                                 
75   4  LABEL LK1; GO TO LK4;             * symbol in TABLE                     
76   4  LABEL LK2; TOKENS(TINDEX+1)=LEXEME(1); * integer value                  
77   4  LABEL LK3;                        * quote string                        
78   4  LABEL LK4;                        * single character token              
79   4          TOKENS(TINDEX+1)=LEXEME(1);                                     
80   4          TOKENS(TINDEX+2)=LEXEME(2);                                     
81   4          TOKENS(TINDEX+3)=LEXEME(3);                                     
82   4        ENDCASE                                                           
83   3                                                                          
84   3        TINDEX=TINDEX+4;            * bump token index                    
85   3        TOKENS=TOKENS+1;            * count number of tokens              
86   3        ENDDO                                                             
87   2                                                                          
88   2  LABEL CONTIN;                                                           
89   2      IF TSTFLG; THEN               * use flag to control output          
90   3        CALL SHOTOKS;               * used only for testing               
91   3        ENDIF                                                             
92   2      ENDDO                                                               
93   1    RETURN                                                                
94   1  ENDPROC                                                                 
95   0                                                                          
96   0  * Format print line for source listing output                           
97   0    DCL LISTCH=4;                   * listing channel                     
98   0    DCL LINCNT=0;                   * source line count                   
99   0    DCL LEVEL=0;                    * structure level number              
100  0    DCL LINSUB=3*256+8;             * substring for line number           
101  0    DCL LEVSUB=3*256+8;             * substring for level number          
102  0    DCL TMP(12);                    * temp buffer for number conversion   
103  0    DCL LISTLN(127);                * buffer for source listing line      
104  0    MSG SPACES='  ';                * two spaces                          
105  0                                                                          
106  0  PROC LISTNG;                                                            
107  1    LISTLN=0;                       * initialize listing buffer           
108  1    TMP=10;                         * initialize temp conversion buffer   
109  1    CALL IFORM(LINCNT,TMP);         * convert line number to string       
110  1    CALL CAT3(LISTLN,LINSUB,TMP);   * copy line number to listing line    
111  1    IF LEVEL; THEN                                                        
112  2      CALL IFORM(LEVEL,TMP);        * convert level number to string      
113  2      CALL CAT3(LISTLN,LEVSUB,TMP); * copy level number to output         
114  2      ELSE CALL CAT2(LISTLN,SPACES);                                      
115  2      ENDIF                                                               
116  1    CALL CAT2(LISTLN,SPACES);       * copy spaces to output               
117  1    CALL CAT2(LISTLN,BUFF);         * copy input line to output           
118  1    CALL WRITE(LISTCH,LISTLN);      * print the listing line              
119  1    RETURN                                                                
120  1  ENDPROC                                                                 
121  0                                                                          
122  0  END                                                                     
 NO ERRORS DETECTED
