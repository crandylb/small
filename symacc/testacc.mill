** TESTACC.S1 -- Test Symbol Table Access, CRB, Feb 14, 2014
** 04/28/2014 CRB Update, add GETS test
*
*ENT TESTACC;
 ENT  TESTACC
*BEGIN TESTACC;
 BEGIN
*START TESTACC;
 ENT  TESTACC
 STRT  TESTACC
*
*EXT PROC LOOKS,GETS,PUTS,GETWRD;
 EXT P LOOKS
 EXT  GETS
 EXT  PUTS
 EXT  GETWRD
*EXT PROC A2B40,B402A;
 EXT P A2B40
 EXT  B402A
*EXT PROC READ,WRITE,IFORM;
 EXT P READ
 EXT  WRITE
 EXT  IFORM
*EXT PROC LEX,CAT2;
 EXT P LEX
 EXT  CAT2
*EXT MASKV;
 EXT  MASKV
*
*MSG IFS='IF';
 SECT DATA
 LABEL IFS
 CONST  2
 CONST  73
 CONST  70
*MSG THENS='THEN';
 SECT DATA
 LABEL THENS
 CONST  4
 CONST  84
 CONST  72
 CONST  69
 CONST  78
*MSG ELSES='ELSE';
 SECT DATA
 LABEL ELSES
 CONST  4
 CONST  69
 CONST  76
 CONST  83
 CONST  69
*MSG PROCES='PROCEDURE';
 SECT DATA
 LABEL PROCES
 CONST  9
 CONST  80
 CONST  82
 CONST  79
 CONST  67
 CONST  69
 CONST  68
 CONST  85
 CONST  82
 CONST  69
*MSG PROCS='PROC';
 SECT DATA
 LABEL PROCS
 CONST  4
 CONST  80
 CONST  82
 CONST  79
 CONST  67
*MSG GREET='Begin SYMACC Test';
 SECT DATA
 LABEL GREET
 CONST  17
 CONST  66
 CONST  101
 CONST  103
 CONST  105
 CONST  110
 CONST  32
 CONST  83
 CONST  89
 CONST  77
 CONST  65
 CONST  67
 CONST  67
 CONST  32
 CONST  84
 CONST  101
 CONST  115
 CONST  116
*MSG TESTIT='Test:               ';
 SECT DATA
 LABEL TESTIT
 CONST  20
 CONST  84
 CONST  101
 CONST  115
 CONST  116
 CONST  58
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
*DCL STAR=('*');
 SECT DATA
 LABEL STAR
 CONST  42
*DCL SLASH=('/');
 SECT DATA
 LABEL SLASH
 CONST  47
*DCL PLUS=('+');
 SECT DATA
 LABEL PLUS
 CONST  43
*DCL MINUS=('-');
 SECT DATA
 LABEL MINUS
 CONST  45
*DCL LPAREN=40;
 SECT DATA
 LABEL LPAREN
 CONST  40
*DCL RPAREN=41;
 SECT DATA
 LABEL RPAREN
 CONST  41
*DCL OUTCH=3;
 SECT DATA
 LABEL OUTCH
 CONST  3
*DCL INDEX,VAL,TAG,WORDS,TTYPE;
 SECT DATA
 LABEL INDEX
 SPACE  1
 LABEL VAL
 SPACE  1
 LABEL TAG
 SPACE  1
 LABEL WORDS
 SPACE  1
 LABEL TTYPE
 SPACE  1
*DCL LIST(20);
 SECT DATA
 LABEL LIST
 SPACE  21
*MSG SCRATCH='          ';
 SECT DATA
 LABEL SCRATCH
 CONST  10
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
 CONST  32
*
*LABEL TESTACC;
 SECT CODE
 LABEL TESTACC
*  CALL WRITE(OUTCH,GREET);
 SCALL  WRITE
 NARGS  2
 ARG  OUTCH
 ARG  GREET
 CEND
*  MASKV=32767 SHL 1 OR 1;       * initialization needed
*.GEN =MASKV,=32767,=1,.BNSHL,=1,.BCOR,.BNST,
 L  =32767
 SHL  =1
 OR  =1
 ST  MASKV
*  TESTIT=7;
*.GEN =TESTIT,=7,.BNST,
 L  =7
 ST  TESTIT
*  CALL CAT2(TESTIT,IFS);
 SCALL  CAT2
 NARGS  2
 ARG  TESTIT
 ARG  IFS
 CEND
*  CALL WRITE(OUTCH,TESTIT);
 SCALL  WRITE
 NARGS  2
 ARG  OUTCH
 ARG  TESTIT
 CEND
*  WORDS=A2B40(IFS);
*.GEN =WORDS,(IFS),.UFA2B40,.BNST,
 SCALL P A2B40
 NARGS  1
 ARG  IFS
 CEND
 ST  WORDS
*  CALL IFORM(WORDS,SCRATCH);
 SCALL  IFORM
 NARGS  2
 ARG  WORDS
 ARG  SCRATCH
 CEND
*  CALL WRITE(OUTCH,SCRATCH);
 SCALL  WRITE
 NARGS  2
 ARG  OUTCH
 ARG  SCRATCH
 CEND
*  VAL=2;                        * IF
*.GEN =VAL,=2,.BNST,
 L  =2
 ST  VAL
*  TTYPE=3;                      * Token type = Keyword
*.GEN =TTYPE,=3,.BNST,
 L  =3
 ST  TTYPE
*  TAG=TTYPE SHL 8;
*.GEN =TAG,TTYPE,=8,.BNSHL,.BNST,
 L  TTYPE
 SHL  =8
 ST  TAG
*  INDEX=LOOKS(WORDS,VAL,TAG);
*.GEN =INDEX,(WORDS,VAL,TAG),.UFLOOKS,.BNST,
 SCALL P LOOKS
 NARGS  3
 ARG  WORDS
 ARG  VAL
 ARG  TAG
 CEND
 ST  INDEX
*  SCRATCH=10;
*.GEN =SCRATCH,=10,.BNST,
 L  =10
 ST  SCRATCH
*  CALL IFORM(INDEX,SCRATCH);
 SCALL  IFORM
 NARGS  2
 ARG  INDEX
 ARG  SCRATCH
 CEND
*  CALL WRITE(OUTCH,SCRATCH);
 SCALL  WRITE
 NARGS  2
 ARG  OUTCH
 ARG  SCRATCH
 CEND
*  CALL B402A(WORDS,SCRATCH);
 SCALL  B402A
 NARGS  2
 ARG  WORDS
 ARG  SCRATCH
 CEND
*  CALL WRITE(OUTCH,SCRATCH);
 SCALL  WRITE
 NARGS  2
 ARG  OUTCH
 ARG  SCRATCH
 CEND
*  CALL GETS(INDEX,VAL,TAG);
 SCALL  GETS
 NARGS  3
 ARG  INDEX
 ARG  VAL
 ARG  TAG
 CEND
*  CALL IFORM(VAL,SCRATCH);
 SCALL  IFORM
 NARGS  2
 ARG  VAL
 ARG  SCRATCH
 CEND
*  CALL WRITE(OUTCH,SCRATCH);
 SCALL  WRITE
 NARGS  2
 ARG  OUTCH
 ARG  SCRATCH
 CEND
*  CALL IFORM(TAG,SCRATCH);
 SCALL  IFORM
 NARGS  2
 ARG  TAG
 ARG  SCRATCH
 CEND
*  CALL WRITE(OUTCH,SCRATCH);
 SCALL  WRITE
 NARGS  2
 ARG  OUTCH
 ARG  SCRATCH
 CEND
*  RETURN;
 RETN  ,
*END
 END
