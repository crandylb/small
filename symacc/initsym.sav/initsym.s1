* initsym.s1 -- Initialize Symbol Table, CRB, Feb 26, 2014
* 03/14/2014 CRB Add COLLS collision counter and token KIND
* 03/18/2014 CRB Randomize single char ops, add INDEX output

BEGIN INITSYM;
ENT INITSYM;
ENT DMPLIST;
ENT BUFF;
START INIT;

EXT PROC READ,WRITE;
EXT PROC LEX;
EXT PROC A2B40,B402A;
EXT PROC LOOKS,GETS,GETWRD;
EXT PROC IREAD,IFORM,CAT2;
EXT COLLS,MASKV;

DCL I,J,EOF=0,STATUS;
DCL BUFF(127);
DCL INCH=1,SCRCH=2,OUTCH=3;
DCL LEXEME(127);
DCL INDEX,WORDS,KIND,TTYPE,TAG,TAGS,VAL,ATTR;
DCL COUNT=0,LIST(60);
DCL STAR=('*');
DCL DOT=('.');
DCL QUOTE=39;                   * ASCII single qoute mark
MSG BLANKS='          ';
MSG SCRATCH='          ';
MSG COLLISIONS='Collisions: ';
SET PRIM18=61;                  * prime # 18

LABEL INIT;
  CALL INITSYM;
  CALL DMPLIST;
RETURN

PROC INITSYM;
  MASKV=(32767 SHL 1) OR 1;     * fudge correct value of mask
  STATUS=READ(SCRCH,BUFF);      * read first line from chan 2
  DO WHILE STATUS NE EOF;
    IF BUFF(1) NE STAR;         * skip comment line
      THEN 
      I=1;

      KIND=LEX(I,LEXEME);       * get a symbol
      IF LEXEME(1) EQ QUOTE; THEN 
          WORDS=LEXEME(2)*PRIM18; * use ASCII code for single character
          TAGS=1;               * bit for single ASCII character
        ELSE 
          WORDS=A2B40(LEXEME);  * convert to B40
          TAGS=0;               * bit for normal base 40 coding
        ENDIF

      KIND=LEX(I,LEXEME);       * get the TTYPE code
      J=1;
      TTYPE=IREAD(J,LEXEME);    * convert to binary

      KIND=LEX(I,LEXEME);       * get VAL for this keyword
      J=1;
      VAL=IREAD(J,LEXEME);      * convert to binary

      KIND=LEX(I,LEXEME);       * get the VALE token KIND code
      J=1;
      KIND=IREAD(J,LEXEME); 
      TAG=(TAGS SHL 4 OR TTYPE) SHL 8 OR KIND; * set TAG word parts

      KIND=LEX(I,LEXEME);       * get the ATTR bits
      J=1;
      ATTR=IREAD(J,LEXEME);
      VAL=ATTR SHL 8 OR VAL;    * ATTR in MSB, ID number in LSB

      INDEX=LOOKS(WORDS,VAL,TAG);
      COUNT=COUNT+1;
      LIST(COUNT)=INDEX;        * save INDEX of this keyword
      ENDIF
    STATUS=READ(SCRCH,BUFF);    * read next line
    ENDDO
  RETURN
ENDPROC

PROC DMPLIST;
  I=1;
  DO WHILE I LE COUNT;
    INDEX=LIST(I);
    CALL GETWRD(INDEX,WORDS);   * get coded symbol from table
    CALL GETS(INDEX,VAL,TAG);   * also get VAL and TAG
    TTYPE=TAG SHR 8;            * get the type and TAGS field
    TAGS=TTYPE SHR 4;           * extract the TAGS bits
    TTYPE=TTYPE AND 15;         * isolate the type number
    BUFF=0;
    CALL CAT2(BUFF,BLANKS);     * clear BUFF
    BUFF=0;
    IF TAGS AND 1; THEN 
        BUFF(1)=WORDS/PRIM18;   * if single character use ASCII
      ELSE 
        CALL B402A(WORDS,BUFF); * decode symbol into BUFF
      ENDIF
    BUFF=8;
    CALL IFORM(VAL,SCRATCH);    * insert VAL in BUFF
    CALL CAT2(BUFF,SCRATCH);
    CALL IFORM(TAG,SCRATCH);    * insert TAG in BUFF
    CALL CAT2(BUFF,SCRATCH);

    CALL IFORM(INDEX,SCRATCH);  * show INDEX
    CALL CAT2(BUFF,SCRATCH);
    CALL WRITE(OUTCH,BUFF);

    I=I+1;
    ENDDO

    CALL IFORM(COLLS,SCRATCH);
    BUFF=0;
    CALL CAT2(BUFF,COLLISIONS);
    CALL CAT2(BUFF,SCRATCH);
    CALL WRITE(OUTCH,BUFF);
  RETURN
  ENDPROC
END
