1       * initsym.s1 -- Initialize Symbol Table, CRB, Feb 26, 2014              
2       * 03/14/2014 CRB Add COLLS collision counter and token KIND             
3                                                                               
4       BEGIN INITSYM;                                                          
5       ENT INITSYM;                                                            
6       ENT DMPLIST;                                                            
7       ENT BUFF;                                                               
8       START INIT;                                                             
9                                                                               
10      EXT PROC READ,WRITE;                                                    
11      EXT PROC LEX;                                                           
12      EXT PROC A2B40,B402A;                                                   
13      EXT PROC LOOKS,GETS,GETWRD;                                             
14      EXT PROC IREAD,IFORM,CAT2;                                              
15      EXT COLLS;                                                              
16                                                                              
17      DCL I,J,EOF=0,STATUS;                                                   
18      DCL BUFF(127);                                                          
19      DCL INCH=1,SCRCH=2,OUTCH=3;                                             
20      DCL LEXEME(127);                                                        
21      DCL INDEX,WORDS,KIND,TTYPE,TAG,TAGS,VAL,ATTR;                           
22      DCL COUNT=0,LIST(60);                                                   
23      DCL STAR=('*');                                                         
24      DCL DOT=('.');                                                          
25      DCL QUOTE=39;                   * ASCII single qoute mark               
26      MSG BLANKS='          ';                                                
27      MSG SCRATCH='          ';                                               
28      MSG COLLISIONS='Collisions: ';                                          
29                                                                              
30      LABEL INIT;                                                             
31        CALL INITSYM;                                                         
32        CALL DMPLIST;                                                         
33      RETURN                                                                  
34                                                                              
35      PROC INITSYM;                                                           
36   1    STATUS=READ(SCRCH,BUFF);      * read first line from chan 2           
37   1    DO WHILE STATUS NE EOF;                                               
38   2      IF BUFF(1) NE STAR;         * skip comment line                     
39   3        THEN                                                              
40   3        I=1;                                                              
41   3                                                                          
42   3        KIND=LEX(I,LEXEME);       * get a symbol                          
43   3        IF LEXEME(1) EQ QUOTE; THEN                                       
44   4            WORDS=LEXEME(2);      * use ASCII code for single character   
45   4            TAGS=1;               * bit for single ASCII character        
46   4          ELSE                                                            
47   4            WORDS=A2B40(LEXEME);  * convert to B40                        
48   4            TAGS=0;               * bit for normal base 40 coding         
49   4          ENDIF                                                           
50   3                                                                          
51   3        KIND=LEX(I,LEXEME);       * get the TTYPE code                    
52   3        J=1;                                                              
53   3        TTYPE=IREAD(J,LEXEME);    * convert to binary                     
54   3                                                                          
55   3        KIND=LEX(I,LEXEME);       * get VAL for this keyword              
56   3        J=1;                                                              
57   3        VAL=IREAD(J,LEXEME);      * convert to binary                     
58   3                                                                          
59   3        KIND=LEX(I,LEXEME);       * get the VALE token KIND code          
60   3        J=1;                                                              
61   3        KIND=IREAD(J,LEXEME);                                             
62   3        TAG=(TAGS SHL 4 OR TTYPE) SHL 8 OR KIND; * set TAG word parts     
63   3                                                                          
64   3        KIND=LEX(I,LEXEME);       * get the ATTR bits                     
65   3        J=1;                                                              
66   3        ATTR=IREAD(J,LEXEME);                                             
67   3        VAL=ATTR SHL 8 OR VAL;    * ATTR in MSB, ID number in LSB         
68   3                                                                          
69   3        INDEX=LOOKS(WORDS,VAL,TAG);                                       
70   3        COUNT=COUNT+1;                                                    
71   3        LIST(COUNT)=INDEX;        * save INDEX of this keyword            
72   3        ENDIF                                                             
73   2      STATUS=READ(SCRCH,BUFF);    * read next line                        
74   2      ENDDO                                                               
75   1    RETURN                                                                
76   1  ENDPROC                                                                 
77   0                                                                          
78   0  PROC DMPLIST;                                                           
79   1    I=1;                                                                  
80   1    DO WHILE I LE COUNT;                                                  
81   2      INDEX=LIST(I);                                                      
82   2      CALL GETWRD(INDEX,WORDS);   * get coded symbol from table           
83   2      CALL GETS(INDEX,VAL,TAG);   * also get VAL and TAG                  
84   2      TTYPE=TAG SHR 8;            * get the type and TAGS field           
85   2      TAGS=TTYPE SHR 4;           * extract the TAGS bits                 
86   2      TTYPE=TTYPE AND 15;         * isolate the type number               
87   2      BUFF=0;                                                             
88   2      CALL CAT2(BUFF,BLANKS);     * clear BUFF                            
89   2      BUFF=0;                                                             
90   2      IF TAGS AND 1; THEN                                                 
91   3          BUFF(1)=WORDS;          * if single character use ASCII         
92   3        ELSE                                                              
93   3          CALL B402A(WORDS,BUFF); * decode symbol into BUFF               
94   3        ENDIF                                                             
95   2      BUFF=8;                                                             
96   2      CALL IFORM(VAL,SCRATCH);    * insert VAL in BUFF                    
97   2      CALL CAT2(BUFF,SCRATCH);                                            
98   2      SCRATCH=0;                                                          
99   2      CALL CAT2(SCRATCH,BLANKS);                                          
100  2      CALL IFORM(TAG,SCRATCH);    * insert TAG in BUFF                    
101  2      CALL CAT2(BUFF,SCRATCH);                                            
102  2      CALL WRITE(OUTCH,BUFF);                                             
103  2      I=I+1;                                                              
104  2      ENDDO                                                               
105  1                                                                          
106  1      CALL IFORM(COLLS,SCRATCH);                                          
107  1      BUFF=0;                                                             
108  1      CALL CAT2(BUFF,COLLISIONS);                                         
109  1      CALL CAT2(BUFF,SCRATCH);                                            
110  1      CALL WRITE(OUTCH,BUFF);                                             
111  1    RETURN                                                                
112  1    ENDPROC                                                               
113  0  END                                                                     
 NO ERRORS DETECTED
