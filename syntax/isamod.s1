* isamod.s1 -- Module of ISA functions for parsing, CRB, Sep 16, 2014
* 09/29/2014 CRB Add ISASEMI, ISAEQU
* 03/06/2015 CRB Add ENTRY for ISASEMI, ISAEQU
* 03/15/2015 CRB Correct mask for OP

* Each function returns True (1) or False (0)

BEGIN ISAMOD;
  EXT TOKENS;                       * access tokens array in scan
  ENT ISAINT,ISASYM;
  ENT ISAPLU,ISAMIN,ISAAST,ISASLA;  * arithmetic operators
  ENT ISALP,ISARP;                  * parentheses
  ENT ISASEMI,ISAEQU;               * semicolon and equal sign

  DCL LKIND;                        * lexical kind
  DCL TTYPE;                        * type code
  DCL OP;                           * operator code

* token is a literal integer evaluated by lex
  PROC ISAINT(IT);                  * is an integer
    LKIND=TOKENS(IT) SHR 28 AND 7;
    IF LKIND EQ 2; THEN RETURN 1;
    ELSE RETURN 0;
    ENDIF
  ENDPROC

* token is a symbol in symbol table and not a keyword
  PROC ISASYM(IT);                  * is a symbol
    LKIND=TOKENS(IT) SHR 28 AND 7;
    TTYPE=TOKENS(IT+3) SHR 8 AND 15;
    IF LKIND EQ 1; THEN IF TTYPE NE 3;
      THEN RETURN 1;
    ENDIF ENDIF
    RETURN 0;
  ENDPROC

  PROC ISAPLU(IT);                  * is a plus sign
    LKIND=TOKENS(IT) SHR 28 AND 7;
    OP=TOKENS(IT+2) AND 255;
    IF LKIND EQ 4; THEN IF OP EQ 50;
      THEN RETURN 1;
    ENDIF ENDIF
    RETURN 0;
  ENDPROC

  PROC ISAMIN(IT);                  * is a minus sign
    LKIND=TOKENS(IT) SHR 28 AND 7;
    OP=TOKENS(IT+2) AND 255;
    IF LKIND EQ 4; THEN IF OP EQ 51;
      THEN RETURN 1;
    ENDIF ENDIF
    RETURN 0;
  ENDPROC

  PROC ISAAST(IT);                  * is an asterisk
    LKIND=TOKENS(IT) SHR 28 AND 7;
    OP=TOKENS(IT+2) AND 255;
    IF LKIND EQ 4; THEN IF OP EQ 53;
      THEN RETURN 1;
    ENDIF ENDIF
    RETURN 0;
  ENDPROC

  PROC ISASLA(IT);                  * is a slash
    LKIND=TOKENS(IT) SHR 28 AND 7;
    OP=TOKENS(IT+2) AND 255;
    IF LKIND EQ 4; THEN IF OP EQ 54;
      THEN RETURN 1;
    ENDIF ENDIF
    RETURN 0;
  ENDPROC

  PROC ISALP(IT);                  * is a left parenthesis
    LKIND=TOKENS(IT) SHR 28 AND 7;
    OP=TOKENS(IT+2) AND 255;
    IF LKIND EQ 4; THEN IF OP EQ 64;
      THEN RETURN 1;
    ENDIF ENDIF
    RETURN 0;
  ENDPROC

  PROC ISARP(IT);                  * is a right parenthesis
    LKIND=TOKENS(IT) SHR 28 AND 7;
    OP=TOKENS(IT+2) AND 255;
    IF LKIND EQ 4; THEN IF OP EQ 65;
      THEN RETURN 1;
    ENDIF ENDIF
    RETURN 0;
  ENDPROC

  PROC ISASEMI(IT);                * is a semicolon
    LKIND=TOKENS(IT) SHR 28 AND 7;
    OP=TOKENS(IT+2) AND 255;
    IF LKIND EQ 4; THEN IF OP EQ 63;
      THEN RETURN 1;
    ENDIF ENDIF
    RETURN 0;
  ENDPROC

  PROC ISAEQU(IT);                * is an equal sign
    LKIND=TOKENS(IT) SHR 28 AND 7;
    OP=TOKENS(IT+2) AND 255;
    IF LKIND EQ 4; THEN IF OP EQ 67;
      THEN RETURN 1;
    ENDIF ENDIF
    RETURN 0;
  ENDPROC

END
